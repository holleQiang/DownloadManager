package com.zhangqiang.downloadmanager.db.dao;

import com.zhangqiang.downloadmanager.db.entity.FTPTaskEntity;
import com.zhangqiang.downloadmanager.db.entity.HttpDefaultTaskEntity;
import com.zhangqiang.downloadmanager.db.entity.HttpPartTaskEntity;
import com.zhangqiang.downloadmanager.db.entity.HttpPartTaskItemEntity;
import com.zhangqiang.downloadmanager.db.entity.HttpTaskEntity;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import java.util.Map;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig fTPTaskEntityDaoConfig;
    private final DaoConfig httpDefaultTaskEntityDaoConfig;
    private final DaoConfig httpPartTaskEntityDaoConfig;
    private final DaoConfig httpPartTaskItemEntityDaoConfig;
    private final DaoConfig httpTaskEntityDaoConfig;

    private final FTPTaskEntityDao fTPTaskEntityDao;
    private final HttpDefaultTaskEntityDao httpDefaultTaskEntityDao;
    private final HttpPartTaskEntityDao httpPartTaskEntityDao;
    private final HttpPartTaskItemEntityDao httpPartTaskItemEntityDao;
    private final HttpTaskEntityDao httpTaskEntityDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        fTPTaskEntityDaoConfig = daoConfigMap.get(FTPTaskEntityDao.class).clone();
        fTPTaskEntityDaoConfig.initIdentityScope(type);

        httpDefaultTaskEntityDaoConfig = daoConfigMap.get(HttpDefaultTaskEntityDao.class).clone();
        httpDefaultTaskEntityDaoConfig.initIdentityScope(type);

        httpPartTaskEntityDaoConfig = daoConfigMap.get(HttpPartTaskEntityDao.class).clone();
        httpPartTaskEntityDaoConfig.initIdentityScope(type);

        httpPartTaskItemEntityDaoConfig = daoConfigMap.get(HttpPartTaskItemEntityDao.class).clone();
        httpPartTaskItemEntityDaoConfig.initIdentityScope(type);

        httpTaskEntityDaoConfig = daoConfigMap.get(HttpTaskEntityDao.class).clone();
        httpTaskEntityDaoConfig.initIdentityScope(type);

        fTPTaskEntityDao = new FTPTaskEntityDao(fTPTaskEntityDaoConfig, this);
        httpDefaultTaskEntityDao = new HttpDefaultTaskEntityDao(httpDefaultTaskEntityDaoConfig, this);
        httpPartTaskEntityDao = new HttpPartTaskEntityDao(httpPartTaskEntityDaoConfig, this);
        httpPartTaskItemEntityDao = new HttpPartTaskItemEntityDao(httpPartTaskItemEntityDaoConfig, this);
        httpTaskEntityDao = new HttpTaskEntityDao(httpTaskEntityDaoConfig, this);

        registerDao(FTPTaskEntity.class, fTPTaskEntityDao);
        registerDao(HttpDefaultTaskEntity.class, httpDefaultTaskEntityDao);
        registerDao(HttpPartTaskEntity.class, httpPartTaskEntityDao);
        registerDao(HttpPartTaskItemEntity.class, httpPartTaskItemEntityDao);
        registerDao(HttpTaskEntity.class, httpTaskEntityDao);
    }
    
    public void clear() {
        fTPTaskEntityDaoConfig.clearIdentityScope();
        httpDefaultTaskEntityDaoConfig.clearIdentityScope();
        httpPartTaskEntityDaoConfig.clearIdentityScope();
        httpPartTaskItemEntityDaoConfig.clearIdentityScope();
        httpTaskEntityDaoConfig.clearIdentityScope();
    }

    public FTPTaskEntityDao getFTPTaskEntityDao() {
        return fTPTaskEntityDao;
    }

    public HttpDefaultTaskEntityDao getHttpDefaultTaskEntityDao() {
        return httpDefaultTaskEntityDao;
    }

    public HttpPartTaskEntityDao getHttpPartTaskEntityDao() {
        return httpPartTaskEntityDao;
    }

    public HttpPartTaskItemEntityDao getHttpPartTaskItemEntityDao() {
        return httpPartTaskItemEntityDao;
    }

    public HttpTaskEntityDao getHttpTaskEntityDao() {
        return httpTaskEntityDao;
    }

}
